{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","index.module.css","redux/contacts-actions.js","Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","Form","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","labelName","htmlFor","nameInputId","type","onChange","phoneInputId","Component","connect","dispatch","contact","contactsActions","visibleContacts","contacts","filter","toLowerCase","includes","contactsList","onDelete","contactInfo","map","info","onClick","onFilterChanged","text","label","App","container","ContactList","createReducer","actions","_","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b4e559b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInfo\":\"ContactList_contactInfo__rrS6T\",\"contact\":\"ContactList_contact__2n-Pp\",\"info\":\"ContactList_info__1L6BP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__19jWm\",\"text\":\"Filter_text__WaNGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__12MZc\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', ({name, number}) =>({\n  payload: {\n        id: shortid.generate(),\n        name,\n        number,\n      },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n// eslint-disable-next-line \nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport s from './Form.module.css';\nimport contactsActions from '../../redux/contacts-actions';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ id: shortid.generate(), [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.labelName} htmlFor={this.nameInputId}>\n          Name\n          <input\n          className={s.name}\n            type=\"phone\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          ></input>\n        </label>\n        <label className={s.labelName} htmlFor={this.phoneInputId}>\n          Number\n          <input\n          className={s.number}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.phoneInputId}\n          ></input>\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(contactsActions.addContact(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);","import s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\n\nfunction ContactsRender({ contactsList, onDelete }) {\n  return (\n      <ul className={s.contactInfo}>\n        {contactsList &&\n          contactsList.map(({ id, name, number }) => (\n            <li className={s.info} key={id}>\n              <span className={s.contact}>\n                {name} - {number}\n              </span>\n              <button type=\"button\" onClick={() => onDelete(id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n      </ul>\n  );\n}\n\nconst visibleContacts = (contacts, filter) => {\nreturn contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase())) \n}\n\nconst mapStateToProps = (state) => ({\n  contactsList: visibleContacts(state.contacts, state.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsRender);\n","import s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts-actions';\n\nconst Filter = ({ onFilterChanged }) => {\n  const handleFilterChanged = e => {\n    const value = e.currentTarget.value;\n    onFilterChanged(value);\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.text} type=\"text\" onChange={handleFilterChanged}></input>\n    </label>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onFilterChanged: text => dispatch(contactsActions.changeFilter(text)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filter);;\n","import React, { Component } from 'react';\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport s from './index.module.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className={s.container}>\n        <Form />\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from '../redux/contacts-reducer';\n\nconst store = configureStore({\n    reducer: contactsReducer,\n    middleware: getDefaultMiddleware(),\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n  \n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1rzz1\",\"labelName\":\"Form_labelName__VeEKO\",\"name\":\"Form_name__GxCWe\",\"number\":\"Form_number__3VOWr\"};"],"sourceRoot":""}